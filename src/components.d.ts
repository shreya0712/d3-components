/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AreaChart {
    'data': string;
    'endcolor': string;
    'endopacity': string;
    'height': string;
    'marginbottom': string;
    'marginleft': string;
    'marginright': string;
    'margintop': string;
    'showaxes': string;
    'startcolor': string;
    'startopacity': string;
    'width': string;
    'xaxis': string;
    'yaxis': string;
  }
  interface BarChart {
    'chartData': any;
    'height': any;
    'margin': any;
    'width': any;
  }
  interface BubbleChart {}
  interface GroupBarAreaChart {}
  interface GroupBarChart {
    'chartdata': any;
    'height': number;
    'marginbottom': string;
    'marginleft': string;
    'marginright': string;
    'margintop': string;
    'width': number;
  }
  interface GroupedBarChart {
    'chartData': any;
    'height': number;
    'margin': any;
    'width': number;
  }
  interface LineChart {
    'connectnulls': number;
    'data': string;
    'data2': { key: string };
    'dotcolor': string;
    'enabledots': number;
    'formatter': any;
    'height': string;
    'marginbottom': string;
    'marginleft': string;
    'marginright': string;
    'margintop': string;
    'width': string;
    'xaxis': string;
    'yaxis': string;
  }
  interface LineChart1 {
    'chartdata': string;
    'connectnulls': number;
    'dotcolor': string;
    'enabledots': number;
    'formatter': any;
    'height': string;
    'marginbottom': string;
    'marginleft': string;
    'marginright': string;
    'margintop': string;
    'width': string;
    'xaxis': string;
    'yaxis': string;
  }
  interface MultiLineChart {
    'chartdata': any;
    'height': number;
    'marginbottom': string;
    'marginleft': string;
    'marginright': string;
    'margintop': string;
    'width': number;
  }
}

declare global {


  interface HTMLAreaChartElement extends Components.AreaChart, HTMLStencilElement {}
  var HTMLAreaChartElement: {
    prototype: HTMLAreaChartElement;
    new (): HTMLAreaChartElement;
  };

  interface HTMLBarChartElement extends Components.BarChart, HTMLStencilElement {}
  var HTMLBarChartElement: {
    prototype: HTMLBarChartElement;
    new (): HTMLBarChartElement;
  };

  interface HTMLBubbleChartElement extends Components.BubbleChart, HTMLStencilElement {}
  var HTMLBubbleChartElement: {
    prototype: HTMLBubbleChartElement;
    new (): HTMLBubbleChartElement;
  };

  interface HTMLGroupBarAreaChartElement extends Components.GroupBarAreaChart, HTMLStencilElement {}
  var HTMLGroupBarAreaChartElement: {
    prototype: HTMLGroupBarAreaChartElement;
    new (): HTMLGroupBarAreaChartElement;
  };

  interface HTMLGroupBarChartElement extends Components.GroupBarChart, HTMLStencilElement {}
  var HTMLGroupBarChartElement: {
    prototype: HTMLGroupBarChartElement;
    new (): HTMLGroupBarChartElement;
  };

  interface HTMLGroupedBarChartElement extends Components.GroupedBarChart, HTMLStencilElement {}
  var HTMLGroupedBarChartElement: {
    prototype: HTMLGroupedBarChartElement;
    new (): HTMLGroupedBarChartElement;
  };

  interface HTMLLineChartElement extends Components.LineChart, HTMLStencilElement {}
  var HTMLLineChartElement: {
    prototype: HTMLLineChartElement;
    new (): HTMLLineChartElement;
  };

  interface HTMLLineChart1Element extends Components.LineChart1, HTMLStencilElement {}
  var HTMLLineChart1Element: {
    prototype: HTMLLineChart1Element;
    new (): HTMLLineChart1Element;
  };

  interface HTMLMultiLineChartElement extends Components.MultiLineChart, HTMLStencilElement {}
  var HTMLMultiLineChartElement: {
    prototype: HTMLMultiLineChartElement;
    new (): HTMLMultiLineChartElement;
  };
  interface HTMLElementTagNameMap {
    'area-chart': HTMLAreaChartElement;
    'bar-chart': HTMLBarChartElement;
    'bubble-chart': HTMLBubbleChartElement;
    'group-bar-area-chart': HTMLGroupBarAreaChartElement;
    'group-bar-chart': HTMLGroupBarChartElement;
    'grouped-bar-chart': HTMLGroupedBarChartElement;
    'line-chart': HTMLLineChartElement;
    'line-chart1': HTMLLineChart1Element;
    'multi-line-chart': HTMLMultiLineChartElement;
  }
}

declare namespace LocalJSX {
  interface AreaChart {
    'data'?: string;
    'endcolor'?: string;
    'endopacity'?: string;
    'height'?: string;
    'marginbottom'?: string;
    'marginleft'?: string;
    'marginright'?: string;
    'margintop'?: string;
    'showaxes'?: string;
    'startcolor'?: string;
    'startopacity'?: string;
    'width'?: string;
    'xaxis'?: string;
    'yaxis'?: string;
  }
  interface BarChart {
    'chartData'?: any;
    'height'?: any;
    'margin'?: any;
    'width'?: any;
  }
  interface BubbleChart {}
  interface GroupBarAreaChart {}
  interface GroupBarChart {
    'chartdata'?: any;
    'height'?: number;
    'marginbottom'?: string;
    'marginleft'?: string;
    'marginright'?: string;
    'margintop'?: string;
    'width'?: number;
  }
  interface GroupedBarChart {
    'chartData'?: any;
    'height'?: number;
    'margin'?: any;
    'width'?: number;
  }
  interface LineChart {
    'connectnulls'?: number;
    'data'?: string;
    'data2'?: { key: string };
    'dotcolor'?: string;
    'enabledots'?: number;
    'formatter'?: any;
    'height'?: string;
    'marginbottom'?: string;
    'marginleft'?: string;
    'marginright'?: string;
    'margintop'?: string;
    'width'?: string;
    'xaxis'?: string;
    'yaxis'?: string;
  }
  interface LineChart1 {
    'chartdata'?: string;
    'connectnulls'?: number;
    'dotcolor'?: string;
    'enabledots'?: number;
    'formatter'?: any;
    'height'?: string;
    'marginbottom'?: string;
    'marginleft'?: string;
    'marginright'?: string;
    'margintop'?: string;
    'width'?: string;
    'xaxis'?: string;
    'yaxis'?: string;
  }
  interface MultiLineChart {
    'chartdata'?: any;
    'height'?: number;
    'marginbottom'?: string;
    'marginleft'?: string;
    'marginright'?: string;
    'margintop'?: string;
    'width'?: number;
  }

  interface IntrinsicElements {
    'area-chart': AreaChart;
    'bar-chart': BarChart;
    'bubble-chart': BubbleChart;
    'group-bar-area-chart': GroupBarAreaChart;
    'group-bar-chart': GroupBarChart;
    'grouped-bar-chart': GroupedBarChart;
    'line-chart': LineChart;
    'line-chart1': LineChart1;
    'multi-line-chart': MultiLineChart;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'area-chart': LocalJSX.AreaChart & JSXBase.HTMLAttributes<HTMLAreaChartElement>;
      'bar-chart': LocalJSX.BarChart & JSXBase.HTMLAttributes<HTMLBarChartElement>;
      'bubble-chart': LocalJSX.BubbleChart & JSXBase.HTMLAttributes<HTMLBubbleChartElement>;
      'group-bar-area-chart': LocalJSX.GroupBarAreaChart & JSXBase.HTMLAttributes<HTMLGroupBarAreaChartElement>;
      'group-bar-chart': LocalJSX.GroupBarChart & JSXBase.HTMLAttributes<HTMLGroupBarChartElement>;
      'grouped-bar-chart': LocalJSX.GroupedBarChart & JSXBase.HTMLAttributes<HTMLGroupedBarChartElement>;
      'line-chart': LocalJSX.LineChart & JSXBase.HTMLAttributes<HTMLLineChartElement>;
      'line-chart1': LocalJSX.LineChart1 & JSXBase.HTMLAttributes<HTMLLineChart1Element>;
      'multi-line-chart': LocalJSX.MultiLineChart & JSXBase.HTMLAttributes<HTMLMultiLineChartElement>;
    }
  }
}


